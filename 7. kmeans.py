# -*- coding: utf-8 -*-
"""3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qvwdg-DcJCwIfqczHpUhbwd-zKIhtRZR
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.metrics import mean_squared_error

image = cv2.imread('/content/drive/MyDrive/Colab Notebooks/ML Concordia/Major Assignment 2/archive/bird.png')
image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

#Normilization
normalized_image = image / 255.0

h, w, d = normalized_image.shape
RGB = np.reshape(normalized_image, (h * w, d))

plt.figure(figsize=(6, 6))
plt.title('Original Normalized Image')
plt.imshow(normalized_image)
plt.axis('off')

plt.show()

def plot_colour_space(RGB, title=None, hold=False, **kwargs):
  if hold:
    ax=plt.gca()
  else:
    fig= plt.figure(figsize=(8,8))
    ax = fig.add_subplot(111,projection='3d')
  kwargs.setdefault('alpha', 1.0)
  ax.scatter(*RGB.T, **kwargs)
  ax.set_xlabel('R', color='r', fontweight='bold', fontsize=15)
  ax.set_ylabel('G', color='g', fontweight='bold', fontsize=15)
  ax.set_zlabel('B', color='b', fontweight='bold', fontsize=15)
  if title is not None:
    ax.set_title(title)

plot_colour_space(RGB, c=RGB, s=0.5, marker='s', title="Pixels plotted in colour space")

num_clusters_5 = 5
kmeans_5 = KMeans(n_clusters=num_clusters_5)
kmeans_5.fit(RGB)
labels_5 = kmeans_5.labels_
cluster_centers_5 = kmeans_5.cluster_centers_

num_clusters_10 = 10
kmeans_10 = KMeans(n_clusters=num_clusters_10)
kmeans_10.fit(RGB)
labels_10 = kmeans_10.labels_
cluster_centers_10 = kmeans_10.cluster_centers_

plot_colour_space(cluster_centers_5, c=cluster_centers_5, s=5, marker='s', title="5 cluster center plotted in colour space")
plot_colour_space(cluster_centers_10, c=cluster_centers_10, s=5, marker='s', title="10 cluster center in colour space")

new_pixels_5 = cluster_centers_5[labels_5]
new_pixels_10 = cluster_centers_10[labels_10]

plot_colour_space(new_pixels_5, c=new_pixels_5, s=5, marker='s', title="5 cluster center plotted in colour space")
plot_colour_space(RGB[labels_5==0], c=cluster_centers_5[0], s=5, marker='s', title="5 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_5==1], c=cluster_centers_5[1], s=5, marker='s', title="5 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_5==2], c=cluster_centers_5[2], s=5, marker='s', title="5 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_5==3], c=cluster_centers_5[3], s=5, marker='s', title="5 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_5==4], c=cluster_centers_5[4], s=5, marker='s', title="5 cluster recolored pixels plotted in colour space", hold=True)

plot_colour_space(new_pixels_10, c=new_pixels_10, s=5, marker='s', title="10 cluster center in colour space")
plot_colour_space(RGB[labels_10==0], c=cluster_centers_10[0], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_10==1], c=cluster_centers_10[1], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_10==2], c=cluster_centers_10[2], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_10==3], c=cluster_centers_10[3], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_10==4], c=cluster_centers_10[4], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_10==5], c=cluster_centers_10[5], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_10==6], c=cluster_centers_10[6], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_10==7], c=cluster_centers_10[7], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_10==8], c=cluster_centers_10[8], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)
plot_colour_space(RGB[labels_10==9], c=cluster_centers_10[9], s=5, marker='s', title="10 cluster recolored pixels plotted in colour space", hold=True)

new_image_5 = np.reshape(new_pixels_5, (h, w, d))
new_image_10 = np.reshape(new_pixels_10, (h, w, d))

plt.figure(figsize=(12, 6))

plt.subplot(1, 3, 1)
plt.title('Original Normalized Image')
plt.imshow(normalized_image)
plt.axis('off')

plt.subplot(1, 3, 2)
plt.title('KMeans with K=5')
plt.imshow(new_image_5)
plt.axis('off')

plt.subplot(1, 3, 3)
plt.title('KMeans with K=10')
plt.imshow(new_image_10)
plt.axis('off')

plt.tight_layout()
plt.show()

mse_5 = mean_squared_error(RGB, new_pixels_5)
mse_10 = mean_squared_error(RGB, new_pixels_10)

print(f"MSE for K=5: {mse_5}")
print(f"MSE for K=10: {mse_10}")
print()
print("Comment on the results:")
print('''When K=5, it resulted in a higher Mean Squared Error (MSE) due to the fewer number of clusters, resulting in less granularity in representing
colors. A higher MSE indicates a larger difference between the original and recolored images. This suggests that the colors assigned to pixels using
the clustering centroids deviate more from the original colors. ''')
print('''When K=10, it resulted in a lower Mean Squared Error (MSE). A lower MSE indicates that the recolored image is closer to the original image
in terms of pixel values. It implies that the colors assigned to each pixel (using the cluster centroids) are more similar to the original colors.
A lower MSE generally suggests a better representation of the original image.''')